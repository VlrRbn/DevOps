# /etc/nginx/sites-available/lab13.conf
# Advanced reverse proxy for netns backend (10.10.0.2:8080)

upstream lab_backend {
    least_conn;
    server 10.10.0.2:8080 max_fails=3 fail_timeout=10s;
    keepalive 32;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Common proxy params
proxy_cache_key "$scheme$request_method$host$request_uri";
proxy_cache_valid 200 301 302 10m;
proxy_cache_bypass $http_cache_control $cookie_nocache;
proxy_no_cache    $http_pragma $http_authorization $cookie_nocache;
proxy_next_upstream error timeout http_502 http_504;
proxy_buffers 16 32k;
proxy_buffer_size 8k;
proxy_read_timeout 60s;

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name localhost 127.0.0.1;

    location = /health {
        access_log off;                                    # Silent health
        default_type text/plain;
        return 200 "OK\n";
    }
    
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name localhost 127.0.0.1;

    ssl_certificate     /etc/nginx/ssl/lab12.crt;         # Self-signed
    ssl_certificate_key /etc/nginx/ssl/lab12.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # Security headers
    server_tokens off;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'" always;

    # Give the request-id to the client
    add_header X-Request-ID $request_id always;           # Request id

    location = /health {
        access_log off;                                   # Silent health
        default_type text/plain;
        return 200 "OK\n";
    }

    location / {
        # Proxy-headers
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port  $server_port;

        # HTTP/1.1 + upgrades
        proxy_http_version 1.1;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Upgrade    $http_upgrade;

        # Timeouts
        proxy_connect_timeout 5s;                          # timeouts
        proxy_send_timeout    30s;
        proxy_read_timeout    30s;

        # Buffers (defolts)
        proxy_buffering       on;
        proxy_buffers         8 16k;
        proxy_buffer_size     8k;

        proxy_cache           LAB;                         # cache from nginx.conf
        proxy_cache_key       "$scheme$request_method$host$request_uri";
        proxy_cache_valid     200 301 302 10m;
        proxy_cache_bypass    $http_cache_control $cookie_nocache;
        proxy_no_cache        $http_pragma $http_authorization $cookie_nocache;

        proxy_cache_lock            on;                    # Lock
        proxy_cache_lock_timeout    10s;
        proxy_cache_use_stale       updating error timeout http_500 http_502 http_503 http_504;

        # Retry on /502/504
        proxy_next_upstream error timeout http_502 http_504;
        
        add_header X-Cache-Status $upstream_cache_status always;

        proxy_pass http://lab_backend;
    }
}
