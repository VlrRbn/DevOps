services:
  prometheus:
    image: prom/prometheus:latest                 # официальный образ
    container_name: lab17-prometheus
    network_mode: host
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=15d"
      - "--storage.tsdb.wal-compression"
      - "--web.listen-address=127.0.0.1:9090"     # внутри контейнера
      - "--web.enable-lifecycle"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro     # конфиг
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
      - promdata:/prometheus                                   # данные
    restart: unless-stopped
    
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: lab17-node-exporter
    network_mode: host
    pid: host
    command:
      - --path.rootfs=/host
    volumes:
      - /:/host:ro,rslave
    restart: unless-stopped
    
  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:1.3.0
    container_name: lab17-nginx-exporter
    network_mode: host
    command:
      - -nginx.scrape-uri=http://127.0.0.1:8080/nginx_status
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: lab17-grafana
    network_mode: host
    environment:
      - GF_SERVER_HTTP_ADDR=127.0.0.1
      - GF_SERVER_HTTP_PORT=3000
      - GF_SERVER_ROOT_URL=http://localhost:3000
    volumes:
      - grafdata:/var/lib/grafana                             # сохранит дашборды
    restart: unless-stopped

volumes:
  promdata:
  grafdata:
